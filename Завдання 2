using System;


public interface IGraph
{
    void Draw();
}


public class LineGraph : IGraph
{
    public void Draw()
    {
        Console.WriteLine("Drawing Line Graph");
    }
}

public class BarGraph : IGraph
{
    public void Draw()
    {
        Console.WriteLine("Drawing Bar Graph");
    }
}

public class PieChart : IGraph
{
    public void Draw()
    {
        Console.WriteLine("Drawing Pie Chart");
    }
}


public abstract class GraphFactory
{
    public abstract IGraph CreateGraph();
}


public class LineGraphFactory : GraphFactory
{
    public override IGraph CreateGraph()
    {
        return new LineGraph();
    }
}

public class BarGraphFactory : GraphFactory
{
    public override IGraph CreateGraph()
    {
        return new BarGraph();
    }
}

public class PieChartFactory : GraphFactory
{
    public override IGraph CreateGraph()
    {
        return new PieChart();
    }
}

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter the type of graph (Line/Bar/Pie): ");
        string graphType = Console.ReadLine();

        GraphFactory factory;

        switch (graphType.ToLower())
        {
            case "line":
                factory = new LineGraphFactory();
                break;

            case "bar":
                factory = new BarGraphFactory();
                break;

            case "pie":
                factory = new PieChartFactory();
                break;

            default:
                Console.WriteLine("Invalid graph type");
                return;
        }

        IGraph graph = factory.CreateGraph();
        graph.Draw();
    }
}
